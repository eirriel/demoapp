name: Build docker image

on:
  push:
    #branches:
    #  - main
    paths-ignore:
      - 'README.md'
      - 'infra/app/**'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Get short commit hash
        id: commit_hash
        run: echo "::set-output name=short_commit_hash::$(git rev-parse --short HEAD)"
      
      - name: Setup credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry: ${{ secrets.AWS_REGISTRY_URL }}
      
      - name: Build Docker image
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/demoapp:${{ steps.commit_hash.outputs.short_commit_hash }} .
      
      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/demoapp:${{ steps.commit_hash.outputs.short_commit_hash }}

      - name: Install Pulumi CLI
        run: curl -fsSL https://get.pulumi.com | sh

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: poetry install --no-root

      - name: Create kubeconfig
        run: aws eks update-kubeconfig --name eks-demo-k-eks-cluster

      - name: Set image tag in Pulumi config
        run: |
          pulumi stack select app-demo
          pulumi config set app_image ${{ steps.login-ecr.outputs.registry }}/demoapp:${{ steps.commit_hash.outputs.short_commit_hash }}
        working-directory: ./infra/app/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Pulumi up
        run: |
          pulumi stack select app-demo
          pulumi up -y
        working-directory: ./infra/app/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          branch: ${{ github.ref_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
            #- name: Save pulumi config changes
            #  run: |
            #    git config --global user.email "actions@github.com"
            #    git config --global user.name "GitHub Actions"
            #    git add ./infra/app
            #    git commit -m "Set image tag in Pulumi config"
            #    git push
